// Merge Sort
#include<bits/stdc++.h>
using namespace std;

void merge(vector<int> &v,int left,int mid,int right)
{
    int n1 = mid-left+1;
    int n2 = right-mid;
    
    vector<int> leftarray(n1);
    vector<int> rightarray(n2);
    
    for(int i=0;i<n1;i++)
    {
        leftarray[i] = v[left+i];
    }
    for(int i=0;i<n2;i++)
    {
        rightarray[i] = v[mid+1+i];
    }
    
    int i=0,j=0,k=left;
    while(i<n1&&j<n2)
    {
        if(leftarray[i]<=rightarray[j])
        {
            v[k] = leftarray[i];
            i++;
        }
        else
        {
            v[k] = rightarray[j];
            j++;
        }
        k++;
    }
    
    while(i<n1)
    {
        v[k] = leftarray[i];
        k++;
        i++;
    }
    while(j<n2)
    {
        v[k] = rightarray[j];
        k++;
        j++;
    }
    
}

void mergesort(vector<int> &v,int left,int right)
{
    if(left>=right)
    {
        return;
    }
    int mid = left + ((right-left)/2);
    mergesort(v,left,mid); //left array
    mergesort(v,mid+1,right); //right array
    merge(v,left,mid,right); //merging the 2 arrays
}


int main()
{
    int n;
    cin>>n;
    vector<int> v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    mergesort(v,0,n-1);
    for(int i=0;i<n;i++)
    {
        cout<<v[i]<<" ";
    }
    return 0;
}